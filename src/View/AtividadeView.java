/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DAO.AtividadeDAO;
import DAO.CategoriaDAO;
import DAO.EventoDAO;
import Model.Atividade;
import Model.Categoria;
import Model.Evento;
import Util.LimitaDigitosNum;
import Util.LimiteDigitos;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author FND
 */
public class AtividadeView extends javax.swing.JInternalFrame {

    Atividade atividade;
    AtividadeDAO atividadeDAO;
    List<Atividade> listaAtividade;
    CategoriaDAO categoriaDAO;
    List<Categoria> listaCategoria;
    EventoDAO eventoDAO;
    List<Evento> listaEvento;
    
    public AtividadeView() {
        initComponents();
        this.setVisible(true);
        atividadeDAO = new AtividadeDAO();
        categoriaDAO = new CategoriaDAO();
        eventoDAO = new EventoDAO();
        listaAtividade = new ArrayList<>();
        listaCategoria = new ArrayList<>();
        listaEvento = new ArrayList<>();
        txtDescricao.setDocument(new LimiteDigitos(80));
        txtMinistrante.setDocument(new LimiteDigitos(60));
        txtLocal.setDocument(new LimiteDigitos(50));
        txtaResumo.setDocument(new LimiteDigitos(99));
        atualizarTabelaAtividade();
        preencherComboEvento();
        preencherComboCategoria();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbId = new javax.swing.JLabel();
        lbDescricao = new javax.swing.JLabel();
        lbMinistrante = new javax.swing.JLabel();
        lbData = new javax.swing.JLabel();
        lbLocal = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lbEvento = new javax.swing.JLabel();
        cbEvento = new javax.swing.JComboBox();
        txtDescricao = new javax.swing.JTextField();
        txtMinistrante = new javax.swing.JTextField();
        lbHorai = new javax.swing.JLabel();
        lbHoraf = new javax.swing.JLabel();
        lbTipo = new javax.swing.JLabel();
        cbCategoria = new javax.swing.JComboBox();
        lbVagasd = new javax.swing.JLabel();
        txtVagasd = new javax.swing.JTextField();
        lbVagast = new javax.swing.JLabel();
        txtVagast = new javax.swing.JTextField();
        txtLocal = new javax.swing.JTextField();
        lbResumo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaResumo = new javax.swing.JTextArea();
        txtData = new javax.swing.JFormattedTextField();
        txtHorai = new javax.swing.JFormattedTextField();
        txtHoraf = new javax.swing.JFormattedTextField();
        btnNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbAtividade = new javax.swing.JTable();

        setClosable(true);
        setResizable(true);
        setTitle("Cadastro de Atividades");

        lbId.setText("ID:");
        lbId.setEnabled(false);

        lbDescricao.setText("Descrição:");
        lbDescricao.setEnabled(false);

        lbMinistrante.setText("Ministrante:");
        lbMinistrante.setEnabled(false);

        lbData.setText("Data:");
        lbData.setEnabled(false);

        lbLocal.setText("Local:");
        lbLocal.setEnabled(false);

        txtId.setEnabled(false);

        lbEvento.setText("Evento:");
        lbEvento.setEnabled(false);

        cbEvento.setEnabled(false);

        txtDescricao.setEnabled(false);

        txtMinistrante.setEnabled(false);

        lbHorai.setText("Hora Ini.:");
        lbHorai.setEnabled(false);

        lbHoraf.setText("Hora Fim:");
        lbHoraf.setEnabled(false);

        lbTipo.setText("Tipo:");
        lbTipo.setEnabled(false);

        cbCategoria.setEnabled(false);

        lbVagasd.setText("Vagas D.:");
        lbVagasd.setEnabled(false);

        txtVagasd.setEnabled(false);

        lbVagast.setText("Vagas T.:");
        lbVagast.setEnabled(false);

        txtVagast.setEnabled(false);

        txtLocal.setEnabled(false);

        lbResumo.setText("Resumo");
        lbResumo.setEnabled(false);

        txtaResumo.setColumns(20);
        txtaResumo.setRows(3);
        txtaResumo.setEnabled(false);
        jScrollPane1.setViewportView(txtaResumo);

        txtData.setFormatterFactory(setFormatoData());
        txtData.setEnabled(false);

        txtHorai.setFormatterFactory(setFormatoHora());
        txtHorai.setEnabled(false);

        txtHoraf.setFormatterFactory(setFormatoHora());
        txtHoraf.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbTipo)
                            .addComponent(lbDescricao)
                            .addComponent(lbId))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbEvento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbEvento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtDescricao)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(cbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbVagasd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtVagasd, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbVagast)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtVagast, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbMinistrante)
                            .addComponent(lbData, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbLocal, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbResumo, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbHorai)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtHorai, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbHoraf)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtHoraf, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtMinistrante)
                            .addComponent(txtLocal)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbId)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbEvento)
                    .addComponent(cbEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDescricao)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTipo)
                    .addComponent(cbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbVagasd)
                    .addComponent(txtVagasd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbVagast)
                    .addComponent(txtVagast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbMinistrante)
                    .addComponent(txtMinistrante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbData)
                    .addComponent(lbHorai)
                    .addComponent(lbHoraf)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHorai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHoraf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbLocal)
                    .addComponent(txtLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(lbResumo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.setEnabled(false);
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        tbAtividade.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbAtividade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbAtividadeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbAtividade);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public static DefaultFormatterFactory setFormatoData(){  
        MaskFormatter comFoco = null;  
        try   
        {   
            comFoco = new MaskFormatter("##/##/####"); 
            comFoco.setPlaceholderCharacter('_');
        }   
        catch (Exception pe) { }  
        DefaultFormatterFactory factory = new DefaultFormatterFactory(comFoco, comFoco);  
        return factory;  
    } 
    
    public static DefaultFormatterFactory setFormatoHora(){  
        MaskFormatter comFoco = null;  
        try   
        {   
            comFoco = new MaskFormatter("##h##"); 
            comFoco.setPlaceholderCharacter('_');
        }   
        catch (Exception pe) { }  
        DefaultFormatterFactory factory = new DefaultFormatterFactory(comFoco, comFoco);  
        return factory;  
    } 
    
    
    public void atualizarTabelaAtividade(){
        atividade = new Atividade();
        
        
        try {
            listaAtividade = atividadeDAO.ListaAtividade();
        } catch (SQLException ex) {
            Logger.getLogger(AtividadeView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       
        
        String dados[][] = new String[listaAtividade.size()][7];
        int i = 0;
        for(Atividade atividade : listaAtividade){
            dados[i][0] = String.valueOf(atividade.getCodigoAtividade());
            dados[i][1] = atividade.getDescricaoAtividade();
            dados[i][2] = String.valueOf(atividade.getVagastAtividade());
            dados[i][3] = String.valueOf(atividade.getVagasdAtividade());
            dados[i][4] = atividade.getDataAtividade();
            dados[i][5] = atividade.getHoraiAtividade();
            dados[i][6] = atividade.getHorafAtividade();
            i++;
        }
        
        String tituloColuna[] = {"ID", "Descrição", "Vagas Total", "Vagas Disponível", "Data", "Hora Inicio", "Hora Termino"};
        DefaultTableModel tabelaAtividade = new DefaultTableModel();
        tabelaAtividade.setDataVector(dados, tituloColuna);
        tbAtividade.setModel(new DefaultTableModel(dados, tituloColuna){
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false
            };
            
            public boolean isCellEditable(int rowIndex, int columnIndex){
                return canEdit[columnIndex];
            }
        });
        
        tbAtividade.getColumnModel().getColumn(0).setPreferredWidth(30);
        tbAtividade.getColumnModel().getColumn(1).setPreferredWidth(300);
        tbAtividade.getColumnModel().getColumn(2).setPreferredWidth(75);
        tbAtividade.getColumnModel().getColumn(3).setPreferredWidth(75);
        tbAtividade.getColumnModel().getColumn(4).setPreferredWidth(100);
        tbAtividade.getColumnModel().getColumn(5).setPreferredWidth(100);
        tbAtividade.getColumnModel().getColumn(6).setPreferredWidth(100);
        
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        tbAtividade.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        tbAtividade.setRowHeight(25);
        tbAtividade.updateUI();
    }
    
    public void preencherComboEvento(){
        
        try {
            listaEvento = eventoDAO.ListaEvento();
        } catch (SQLException ex) {
            Logger.getLogger(AtividadeView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for (Evento evento : listaEvento){
            cbEvento.addItem(evento.getTituloEvento());
        }
    }
    
    public void preencherComboCategoria(){
        
       
        try {
            listaCategoria = categoriaDAO.ListaCategoria();
        } catch (SQLException ex) {
            Logger.getLogger(AtividadeView.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
        for (Categoria categoria : listaCategoria){
            cbCategoria.addItem(categoria.getNomeCategoria());
        }
    }
    
    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        limpaCamposAtividade();
        preparaNovo();
        ativaCampos();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        
        if(txtDescricao.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Preencha os campos");
            txtDescricao.requestFocusInWindow();
        } else if(txtId.getText().isEmpty()){
            atividade = new Atividade();
            atividade.setDescricaoAtividade(txtDescricao.getText());
            atividade.setVagastAtividade(Integer.parseInt(txtVagast.getText()));
            atividade.setVagasdAtividade(Integer.parseInt(txtVagasd.getText()));
            atividade.setMinistranteAtividade(txtMinistrante.getText());
            atividade.setDataAtividade(txtData.getText());
            atividade.setHoraiAtividade(txtHorai.getText());
            atividade.setHorafAtividade(txtHoraf.getText());
            atividade.setLocalAtividade(txtLocal.getText());
            atividade.setResumoAtividade(txtaResumo.getText());
            atividade.setCategoriaAtividade(listaCategoria.get(cbCategoria.getSelectedIndex()));
            atividade.setEventoAtividade(listaEvento.get(cbEvento.getSelectedIndex()));
            
             
            try {
                atividadeDAO.salvar(atividade);
            } catch (SQLException ex) {
                Logger.getLogger(AtividadeView.class.getName()).log(Level.SEVERE, null, ex);
            }
             
            JOptionPane.showMessageDialog(null, "Salvo com sucesso!");
            atualizarTabelaAtividade();
            preparaSalvareCancelar();
            desativaCampos();
            limpaCamposAtividade();
        } else{
            atividade = new Atividade();
            atividade.setDescricaoAtividade(txtDescricao.getText());
            atividade.setVagastAtividade(Integer.parseInt(txtVagast.getText()));
            atividade.setVagasdAtividade(Integer.parseInt(txtVagasd.getText()));
            atividade.setMinistranteAtividade(txtMinistrante.getText());
            atividade.setDataAtividade(txtData.getText());
            atividade.setHoraiAtividade(txtHorai.getText());
            atividade.setHorafAtividade(txtHoraf.getText());
            atividade.setLocalAtividade(txtLocal.getText());
            atividade.setResumoAtividade(txtaResumo.getText());
            atividade.setCategoriaAtividade(listaCategoria.get(cbCategoria.getSelectedIndex()));
            atividade.setEventoAtividade(listaEvento.get(cbEvento.getSelectedIndex()));
            
            
            try {
                atividadeDAO.alterar(atividade);
            } catch (SQLException ex) {
                Logger.getLogger(AtividadeView.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            JOptionPane.showMessageDialog(null, "Alterado com sucesso!");
            atualizarTabelaAtividade();
            preparaSalvareCancelar();
            desativaCampos();
        }
        
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        preparaNovo();
        ativaCampos();
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if(txtId.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Selecione uma atividade!");
        } else{
            atividade = new Atividade();
            atividade.setCodigoAtividade(Integer.parseInt(txtId.getText()));
            int confirma = JOptionPane.showConfirmDialog(null, "Deseja excluir: " +txtDescricao.getText());
            
            if(confirma ==0){
               
                try {
                    atividadeDAO.excluir(atividade);
                } catch (SQLException ex) {
                    Logger.getLogger(AtividadeView.class.getName()).log(Level.SEVERE, null, ex);
                }
               
                
                JOptionPane.showMessageDialog(null, "Excluido com sucesso!");
                limpaCamposAtividade();
                atualizarTabelaAtividade();
                preparaExcluir();
            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limpaCamposAtividade();
        preparaSalvareCancelar();
        desativaCampos();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void tbAtividadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbAtividadeMouseClicked
        txtId.setText(tbAtividade.getValueAt(tbAtividade.getSelectedRow(),0).toString());
        txtDescricao.setText(tbAtividade.getValueAt(tbAtividade.getSelectedRow(),1).toString());
        txtVagast.setText(tbAtividade.getValueAt(tbAtividade.getSelectedRow(),2).toString());
        txtVagasd.setText(tbAtividade.getValueAt(tbAtividade.getSelectedRow(),3).toString());
        txtData.setText(tbAtividade.getValueAt(tbAtividade.getSelectedRow(),4).toString());
        txtHorai.setText(tbAtividade.getValueAt(tbAtividade.getSelectedRow(),5).toString());
        txtHoraf.setText(tbAtividade.getValueAt(tbAtividade.getSelectedRow(),6).toString());
        preparaSelecaoTabela();
        
    }//GEN-LAST:event_tbAtividadeMouseClicked

    public void limpaCamposAtividade(){
        txtId.setText("");
        txtDescricao.setText("");
        txtVagasd.setText("");
        txtVagast.setText("");
        txtMinistrante.setText("");
        txtData.setText("");
        txtHorai.setText("");
        txtHoraf.setText("");
        txtLocal.setText("");
        txtaResumo.setText("");
        cbEvento.setSelectedItem("");
        cbCategoria.setSelectedItem("");
    }
    
    public void ativaCampos(){
        lbId.setEnabled(true);
        lbEvento.setEnabled(true);
        cbEvento.setEnabled(true);
        lbDescricao.setEnabled(true);
        txtDescricao.setEnabled(true);
        lbVagasd.setEnabled(true);
        txtVagasd.setEnabled(true);
        lbVagast.setEnabled(true);
        txtVagast.setEnabled(true);
        lbTipo.setEnabled(true);
        cbCategoria.setEnabled(true);
        lbMinistrante.setEnabled(true);
        txtMinistrante.setEnabled(true);
        lbData.setEnabled(true);
        txtData.setEnabled(true);
        lbHorai.setEnabled(true);
        txtHorai.setEnabled(true);
        lbHoraf.setEnabled(true);
        txtHoraf.setEnabled(true);
        lbLocal.setEnabled(true);
        txtLocal.setEnabled(true);
        lbResumo.setEnabled(true);
        txtaResumo.setEnabled(true);
    }
    
    public void desativaCampos(){
        lbId.setEnabled(false);
        lbEvento.setEnabled(false);
        cbEvento.setEnabled(false);
        lbDescricao.setEnabled(false);
        txtDescricao.setEnabled(false);
        lbVagasd.setEnabled(false);
        txtVagasd.setEnabled(false);
        lbVagast.setEnabled(false);
        txtVagast.setEnabled(false);
        lbTipo.setEnabled(false);
        cbCategoria.setEnabled(false);
        lbMinistrante.setEnabled(false);
        txtMinistrante.setEnabled(false);
        lbData.setEnabled(false);
        txtData.setEnabled(false);
        lbHorai.setEnabled(false);
        txtHorai.setEnabled(false);
        lbHoraf.setEnabled(false);
        txtHoraf.setEnabled(false);
        lbLocal.setEnabled(false);
        txtLocal.setEnabled(false);
        lbResumo.setEnabled(false);
        txtaResumo.setEnabled(false);
    }
    
    public void preparaNovo(){
        btnNovo.setEnabled(false);
        btnSalvar.setEnabled(true);
        btnCancelar.setEnabled(true);
        tbAtividade.setEnabled(false);
        tbAtividade.clearSelection();
    }
    
    public void preparaSalvareCancelar(){
        btnNovo.setEnabled(true);
        btnSalvar.setEnabled(false);
        btnCancelar.setEnabled(false);
        tbAtividade.setEnabled(true);
    }
    
    public void preparaSelecaoTabela(){
        btnNovo.setEnabled(true);
        btnExcluir.setEnabled(true);
        btnAlterar.setEnabled(true);
    }
    
    public void preparaAlterar(){
        btnNovo.setEnabled(false);
        btnExcluir.setEnabled(false);
        btnAlterar.setEnabled(false);
        btnSalvar.setEnabled(true);
        btnCancelar.setEnabled(true);
        tbAtividade.setEnabled(false);
        tbAtividade.clearSelection();
    }
    
    public void preparaExcluir(){
        btnExcluir.setEnabled(false);
        btnAlterar.setEnabled(false);
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cbCategoria;
    private javax.swing.JComboBox cbEvento;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbData;
    private javax.swing.JLabel lbDescricao;
    private javax.swing.JLabel lbEvento;
    private javax.swing.JLabel lbHoraf;
    private javax.swing.JLabel lbHorai;
    private javax.swing.JLabel lbId;
    private javax.swing.JLabel lbLocal;
    private javax.swing.JLabel lbMinistrante;
    private javax.swing.JLabel lbResumo;
    private javax.swing.JLabel lbTipo;
    private javax.swing.JLabel lbVagasd;
    private javax.swing.JLabel lbVagast;
    private javax.swing.JTable tbAtividade;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JFormattedTextField txtHoraf;
    private javax.swing.JFormattedTextField txtHorai;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtLocal;
    private javax.swing.JTextField txtMinistrante;
    private javax.swing.JTextField txtVagasd;
    private javax.swing.JTextField txtVagast;
    private javax.swing.JTextArea txtaResumo;
    // End of variables declaration//GEN-END:variables
}
